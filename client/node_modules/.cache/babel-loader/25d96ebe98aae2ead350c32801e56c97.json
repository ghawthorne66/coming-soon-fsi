{"ast":null,"code":"import _slicedToArray from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/a10.13/Desktop/coming-soon-fsi/client/src/components/Countdown.js\";\nimport React, { useState, useEffect } from \"react\";\nimport moment, { duration } from \"moment\";\nimport PropTypes from \"prop-types\";\nimport useInterval from \"react-useinterval\";\nimport \"../styles/Countdown.css\";\n\nconst Countdown = ({\n  countdownDate\n}) => {\n  const _useState = useState({\n    days: 0,\n    hours: 0,\n    mins: 0,\n    secs: 0\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const addZeros = value => {\n    value = String(value);\n\n    while (value.length < 2) {\n      value = `0${value}`;\n    }\n\n    return value;\n  };\n\n  const setCountdown = () => {\n    const futureDate = moment(countdownDate);\n    const today = moment();\n    const clockDuration = duration(futureDate.diff(today));\n    const days = Math.floor(clockDuration.asDays());\n    const hours = clockDuration.hours();\n    const mins = clockDuration.minutes();\n    const secs = clockDuration.seconds();\n    setState({\n      days,\n      hours,\n      mins,\n      secs\n    });\n  };\n\n  useInterval(() => {\n    setCountdown();\n  }, 1000);\n  useEffect(() => {\n    setCountdown();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"countdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, Object.keys(state).map((key, i) => React.createElement(\"div\", {\n    key: i,\n    className: \"countdown-segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"countdown-segment-number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, addZeros(state[key])), React.createElement(\"span\", {\n    className: \"countdown-segment-caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, key.toUpperCase()))));\n};\n\nCountdown.propTypes = {\n  countdownDate: PropTypes.string.isRequired\n};\nexport default Countdown;","map":{"version":3,"sources":["/Users/a10.13/Desktop/coming-soon-fsi/client/src/components/Countdown.js"],"names":["React","useState","useEffect","moment","duration","PropTypes","useInterval","Countdown","countdownDate","days","hours","mins","secs","state","setState","addZeros","value","String","length","setCountdown","futureDate","today","clockDuration","diff","Math","floor","asDays","minutes","seconds","Object","keys","map","key","i","toUpperCase","propTypes","string","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,IAAiBC,QAAjB,QAAiC,QAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,OAAO,yBAAP;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAAA,oBACbP,QAAQ,CAAC;AACjCQ,IAAAA,IAAI,EAAE,CAD2B;AAEjCC,IAAAA,KAAK,EAAE,CAF0B;AAGjCC,IAAAA,IAAI,EAAE,CAH2B;AAIjCC,IAAAA,IAAI,EAAE;AAJ2B,GAAD,CADK;AAAA;AAAA,QAChCC,KADgC;AAAA,QACzBC,QADyB;;AAQvC,QAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxBA,IAAAA,KAAK,GAAGC,MAAM,CAACD,KAAD,CAAd;;AACA,WAAOA,KAAK,CAACE,MAAN,GAAe,CAAtB,EAAyB;AACvBF,MAAAA,KAAK,GAAI,IAAGA,KAAM,EAAlB;AACD;;AACD,WAAOA,KAAP;AACD,GAND;;AAQA,QAAMG,YAAY,GAAG,MAAM;AACzB,UAAMC,UAAU,GAAGjB,MAAM,CAACK,aAAD,CAAzB;AAEA,UAAMa,KAAK,GAAGlB,MAAM,EAApB;AAEA,UAAMmB,aAAa,GAAGlB,QAAQ,CAACgB,UAAU,CAACG,IAAX,CAAgBF,KAAhB,CAAD,CAA9B;AAEA,UAAMZ,IAAI,GAAGe,IAAI,CAACC,KAAL,CAAWH,aAAa,CAACI,MAAd,EAAX,CAAb;AACA,UAAMhB,KAAK,GAAGY,aAAa,CAACZ,KAAd,EAAd;AACA,UAAMC,IAAI,GAAGW,aAAa,CAACK,OAAd,EAAb;AACA,UAAMf,IAAI,GAAGU,aAAa,CAACM,OAAd,EAAb;AAEAd,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IADO;AAEPC,MAAAA,KAFO;AAGPC,MAAAA,IAHO;AAIPC,MAAAA;AAJO,KAAD,CAAR;AAMD,GAlBD;;AAoBAN,EAAAA,WAAW,CAAC,MAAM;AAChBa,IAAAA,YAAY;AACb,GAFU,EAER,IAFQ,CAAX;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,MAAM,CAACC,IAAP,CAAYjB,KAAZ,EAAmBkB,GAAnB,CAAuB,CAACC,GAAD,EAAMC,CAAN,KACtB;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAa,IAAA,SAAS,EAAC,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,QAAQ,CAACF,KAAK,CAACmB,GAAD,CAAN,CADX,CADF,EAIE;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CA,GAAG,CAACE,WAAJ,EAA7C,CAJF,CADD,CADH,CADF;AAYD,CAxDD;;AA0DA3B,SAAS,CAAC4B,SAAV,GAAsB;AACpB3B,EAAAA,aAAa,EAAEH,SAAS,CAAC+B,MAAV,CAAiBC;AADZ,CAAtB;AAIA,eAAe9B,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport moment, { duration } from \"moment\";\nimport PropTypes from \"prop-types\";\nimport useInterval from \"react-useinterval\";\n\nimport \"../styles/Countdown.css\";\n\nconst Countdown = ({ countdownDate }) => {\n  const [state, setState] = useState({\n    days: 0,\n    hours: 0,\n    mins: 0,\n    secs: 0\n  });\n\n  const addZeros = value => {\n    value = String(value);\n    while (value.length < 2) {\n      value = `0${value}`;\n    }\n    return value;\n  };\n\n  const setCountdown = () => {\n    const futureDate = moment(countdownDate);\n\n    const today = moment();\n\n    const clockDuration = duration(futureDate.diff(today));\n\n    const days = Math.floor(clockDuration.asDays());\n    const hours = clockDuration.hours();\n    const mins = clockDuration.minutes();\n    const secs = clockDuration.seconds();\n\n    setState({\n      days,\n      hours,\n      mins,\n      secs\n    });\n  };\n\n  useInterval(() => {\n    setCountdown();\n  }, 1000);\n\n  useEffect(() => {\n    setCountdown();\n  }, []);\n\n  return (\n    <div className=\"countdown\">\n      {Object.keys(state).map((key, i) => (\n        <div key={i} className=\"countdown-segment\">\n          <span className=\"countdown-segment-number\">\n            {addZeros(state[key])}\n          </span>\n          <span className=\"countdown-segment-caption\">{key.toUpperCase()}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nCountdown.propTypes = {\n  countdownDate: PropTypes.string.isRequired\n};\n\nexport default Countdown;\n"]},"metadata":{},"sourceType":"module"}